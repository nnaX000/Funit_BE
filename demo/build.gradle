plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 기본 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'io.github.cdimascio:dotenv-java:3.1.0'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	runtimeOnly 'mysql:mysql-connector-java'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Database
	runtimeOnly 'com.h2database:h2' // H2 Database
	// runtimeOnly 'mysql:mysql-connector-java' // MySQL 사용 시

	// Swagger (OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// DevTools (개발용 핫 리로드)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Java 빌드 옵션 설정
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
